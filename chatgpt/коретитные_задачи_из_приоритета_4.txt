Задачи для 4-го пункта (Интеграция с внешними системами в упрощенном виде):
Задача 1: Импорт данных из CSV-файла в справочник 1С

Описание задачи:

    Цель: Разработать обработку, которая импортирует данные из CSV-файла в существующий справочник "Контрагенты" в базе 1С.
    Исходные данные:
        CSV-файл с полями: "Наименование", "ИНН", "КПП", "Адрес".
        Файл содержит как новые, так и уже существующие в базе контрагенты.
    Требования:
        Проверять наличие контрагента по полю "ИНН".
            Если контрагент существует: обновить его данные из файла.
            Если контрагента нет: добавить нового контрагента в справочник.
        Обработка должна предоставлять пользователю возможность выбрать CSV-файл для импорта.
        Предусмотреть обработку возможных ошибок (например, неверный формат файла, отсутствующие поля).

Критерии оценки:

    Корректность импорта данных:
        Все данные из файла правильно добавлены или обновлены в справочнике.
    Качество сгенерированного кода:
        Код оптимизирован, читаем и соответствует стандартам 1С.
    Помощь AI-инструмента:
        Насколько эффективно инструмент помог в создании обработки (объем предложенного кода, советы по реализации).
    Время разработки:
        Общее время, затраченное на создание обработки с использованием AI-инструмента.

Задача 2: Экспорт данных из регистра сведений в Excel-файл

Описание задачи:

    Цель: Создать обработку, которая выгружает данные из регистра сведений "ПродажиПоКлиентам" в Excel-файл.
    Исходные данные:
        Регистр сведений с полями: "Клиент", "ДатаПродажи", "СуммаПродажи".
    Требования:
        Выгрузить данные за определенный период, который пользователь задает при запуске обработки.
        Excel-файл должен содержать заголовки колонок и быть отформатирован для удобного чтения.
        Файл сохраняется на рабочий стол пользователя с именем "Отчет_ПродажиПоКлиентам_дата.xlsx".

Критерии оценки:

    Корректность и полнота данных в файле:
        Все выбранные данные отображаются правильно и в полном объеме.
    Форматирование Excel-файла:
        Наличие заголовков, автофильтров, форматирование чисел и дат.
    Помощь AI-инструмента:
        Эффективность в генерировании кода для экспорта и форматирования данных.
    Удобство использования:
        Интуитивно понятный интерфейс обработки для пользователя.

Задача 3: Получение данных с внешнего веб-сервиса и обновление регистра 1С

Описание задачи:

    Цель: Разработать обработку, которая получает текущие курсы валют с внешнего API и обновляет регистр сведений "КурсыВалют".
    Исходные данные:
        Внешний REST API, предоставляющий курсы валют в формате JSON (например, api.exchangeratesapi.io).
    Требования:
        Обращаться к API и получать курсы для валют: USD, EUR, GBP.
        Записывать полученные курсы в регистр сведений с указанием даты обновления.
        Обработка должна уведомлять пользователя об успешном обновлении или возникших ошибках (например, проблемы с соединением).

Критерии оценки:

    Успешное получение и сохранение данных:
        Курсы валют корректно загружены и сохранены в базе.
    Обработка ошибок:
        Пользователь получает понятные сообщения при возникновении ошибок.
    Помощь AI-инструмента:
        Насколько инструмент облегчил разработку запросов к API и обработку ответов.
    Качество кода:
        Код должен быть структурированным и устойчивым к изменениям в формате данных.

Задача 4: Создание простого веб-сервиса для предоставления данных из 1С

Описание задачи:

    Цель: Разработать веб-сервис на платформе 1С, который предоставляет информацию о наличии товара на складе по запросу.
    Исходные данные:
        Справочник "Номенклатура" и регистр накопления "ТоварыНаСкладах".
    Требования:
        Веб-сервис принимает входной параметр "КодТовара" (артикул или уникальный идентификатор).
        Возвращает информацию в формате JSON:
            "НаименованиеТовара"
            "ОстатокНаСкладе"
            "ЕдиницаИзмерения"
        Обеспечить базовую защиту веб-сервиса (например, простая авторизация по ключу API).
        Документировать способы обращения к веб-сервису.

Критерии оценки:

    Функциональность веб-сервиса:
        Корректное принятие запросов и выдача ответов.
    Безопасность:
        Наличие механизма авторизации и защита от несанкционированного доступа.
    Помощь AI-инструмента:
        Поддержка в настройке веб-сервиса и обработке HTTP-запросов.
    Документация:
        Наличие инструкции по использованию веб-сервиса.

Задача 5: Интеграция с внешним файлом XML для обновления цен номенклатуры

Описание задачи:

    Цель: Разработать обработку, которая считывает данные из XML-файла и обновляет цены номенклатуры в базе 1С.
    Исходные данные:
        XML-файл с информацией о товарах:

        <Товары>
          <Товар>
            <Код>001</Код>
            <Цена>150.00</Цена>
          </Товар>
          <!-- Другие товары -->
        </Товары>

    Требования:
        Обработка должна позволять выбрать XML-файл для импорта.
        По полю "Код" найти соответствующий товар в справочнике "Номенклатура" и обновить его цену.
        Предусмотреть логирование обновленных записей и возможных несоответствий (если товар не найден).

Критерии оценки:

    Точность обновления цен:
        Цены товаров в базе соответствуют данным из XML-файла.
    Обработка ошибок и логирование:
        Предоставление отчета о результатах обновления (количество обновленных записей, ошибки).
    Помощь AI-инструмента:
        Поддержка в парсинге XML и обновлении данных в базе.
    Качество интерфейса обработки:
        Удобство для пользователя при выборе файла и запуске обработки.

Задача 6: Отправка уведомлений по электронной почте при наступлении события

Описание задачи:

    Цель: Создать обработку, которая автоматически отправляет электронные письма ответственным сотрудникам при достижении минимального остатка товара на складе.
    Исходные данные:
        Справочник "Номенклатура" с полем "МинимальныйОстаток".
        Регистр накопления "ТоварыНаСкладах".
        Справочник "Сотрудники" с полем "Email".
    Требования:
        Обработка проверяет остатки товаров и выявляет позиции, где текущий остаток меньше или равен минимальному.
        Формирует список таких товаров и отправляет письмо ответственному сотруднику со списком.
        Настроить соединение с почтовым сервером для отправки писем.
        Обработка должна запускаться вручную или по расписанию.

Критерии оценки:

    Функциональность обработки:
        Корректное выявление товаров с низким остатком и отправка уведомлений.
    Настройка почтового соединения:
        Успешная интеграция с SMTP-сервером и отправка писем.
    Помощь AI-инструмента:
        Эффективность в генерации кода для проверки условий и отправки электронной почты.
    Гибкость настройки:
        Возможность изменения параметров (например, порогового значения остатка, получателей писем).

Задача 7: Интеграция с внешней базой данных для синхронизации справочников

Описание задачи:

    Цель: Разработать обработку, которая синхронизирует справочник "Клиенты" с внешней базой данных SQL Server.
    Исходные данные:
        Внешняя база данных с таблицей "Customers" и полями: "CustomerID", "Name", "Email", "Phone".
    Требования:
        Установить соединение с внешней базой данных через OLE DB или ODBC.
        Считать данные из таблицы "Customers" и обновить соответствующие записи в справочнике "Клиенты" в 1С.
        Новые записи должны добавляться, а существующие обновляться по полю "CustomerID".
        Предусмотреть обработку возможных ошибок соединения и конфликтов данных.

Критерии оценки:

    Корректность синхронизации:
        Данные в справочнике "Клиенты" соответствуют данным из внешней базы.
    Надежность соединения:
        Обработка устойчиво работает при различных условиях (например, кратковременное отсутствие связи).
    Помощь AI-инструмента:
        Содействие в настройке подключения к внешней базе и обработке данных.
    Документирование процесса:
        Наличие инструкций по настройке соединения и использования обработки.

Общие рекомендации для включения задач в бенчмарк:

    Сосредоточьтесь на простоте: Задачи должны быть достаточно простыми, чтобы их можно было быстро реализовать и оценить эффективность AI-инструмента.
    Определите четкие критерии оценки: Это позволит объективно сравнивать инструменты и их полезность в решении конкретных задач.
    Используйте типичные сценарии: Задачи должны отражать реальные ситуации, с которыми часто сталкиваются разработчики 1С при интеграции с внешними системами.
    Подготовьте необходимые исходные данные: Это ускорит процесс тестирования и сделает результаты более репрезентативными.

Заключение:

Приведенные задачи помогут вам оценить возможности AI-инструментов в контексте интеграции 1С с внешними системами. Они покрывают основные аспекты работы с внешними данными и коммуникациями, что позволит собрать полезные данные для вашего бенчмарка и быстро запустить его первую версию.