Конкретные задачи для пункта 1: Программирование на языке 1С

Для быстрого запуска бенчмарка по AI-инструментам для разработчиков 1С предлагаю следующие конкретные задачи по программированию на языке 1С. Эти задачи отражают типичные сценарии и позволяют объективно оценить помощь AI-инструмента в разработке кода.
Задача 1: Функция расчета суммы элементов массива

Описание:

Написать функцию на языке 1С, которая принимает на вход массив числовых значений и возвращает сумму всех элементов этого массива.

Требования:

    Функция должна корректно обрабатывать пустой массив (возвращать 0).
    Учесть возможность наличия отрицательных чисел.

Ожидаемый результат:

    Корректный код функции с соответствующими комментариями.
    Тестовые примеры использования функции с различными входными данными.

Задача 2: Процедура фильтрации списка клиентов по городу

Описание:

Создать процедуру, которая из общего справочника "Контрагенты" выбирает всех клиентов, расположенных в заданном городе, и выводит их наименования в сообщении пользователю.

Требования:

    Процедура должна принимать на вход название города в виде строки.
    Учесть, что в справочнике могут быть контрагенты без указанного города.

Ожидаемый результат:

    Код процедуры с обработкой возможных исключений.
    Пример вызова процедуры с конкретным городом.

Задача 3: Создание простого отчета по продажам за период

Описание:

Разработать отчет, который выводит сумму продаж по дням за заданный период.

Требования:

    Отчет должен запрашивать у пользователя дату начала и дату окончания периода.
    Выводить таблицу с двумя колонками: "Дата" и "Сумма продаж".
    Сортировать данные по возрастанию даты.

Ожидаемый результат:

    Код формирования отчета с использованием запроса к базе данных.
    Настроенный макет отчета для отображения результатов.
    Пример работы отчета с тестовыми данными.

Задача 4: Функция проверки ИНН контрагента

Описание:

Написать функцию, которая проверяет корректность введенного ИНН контрагента (10 или 12 цифр) и возвращает булево значение.

Требования:

    Функция должна учитывать количество цифр и выполнять проверку контрольного числа по алгоритму.
    В случае некорректного ИНН выводить сообщение об ошибке.

Ожидаемый результат:

    Реализованный алгоритм проверки ИНН в функции.
    Тестовые случаи с корректными и некорректными ИНН.

Задача 5: Процедура импорта данных из CSV-файла

Описание:

Создать процедуру, которая считывает данные из CSV-файла и записывает их в табличную часть документа "Поступление товаров".

Требования:

    CSV-файл содержит колонки: "Код товара", "Количество", "Цена".
    Обработка возможных ошибок при чтении файла (например, файл не найден, некорректный формат данных).
    Создание нового документа "Поступление товаров" и заполнение табличной части считанными данными.

Ожидаемый результат:

    Код процедуры с комментариями.
    Пример CSV-файла для тестирования.
    Созданный документ с импортированными данными.

Задача 6: Генерация последовательности чисел Фибоначчи

Описание:

Написать функцию, которая генерирует массив из N чисел последовательности Фибоначчи.

Требования:

    Функция принимает на вход целое число N (количество элементов в последовательности).
    Учесть, что N может быть меньше или равно 0 (в этом случае возвращать пустой массив).
    Оптимизировать функцию по скорости выполнения.

Ожидаемый результат:

    Код функции с описанием.
    Тестовые примеры с разными значениями N.

Задача 7: Удаление дубликатов в списке значений

Описание:

Создать процедуру, которая принимает на вход список значений (массив) и возвращает новый список без повторяющихся элементов.

Требования:

    Сохранить порядок первых вхождений элементов.
    Поддержка списков со значениями разных типов (числа, строки).

Ожидаемый результат:

    Реализация процедуры с комментариями.
    Тестирование на различных наборах данных, включая списки с разными типами значений.

Задача 8: Определение високосного года

Описание:

Написать функцию, которая по заданному году определяет, является ли он високосным.

Требования:

    Функция принимает целое число (год) и возвращает булево значение.
    Учитывать правила определения високосного года (делится на 4, но не делится на 100, за исключением тех, что делятся на 400).

Ожидаемый результат:

    Код функции с подробными комментариями.
    Проверка функции на известных високосных и невисокосных годах.

Задача 9: Расчет скидки в зависимости от суммы покупки

Описание:

Создать процедуру, которая рассчитывает сумму скидки для покупателя в зависимости от общей суммы его покупки.

Требования:

    Правила расчета скидки:
        До 10 000 рублей — скидка 5%.
        От 10 001 до 50 000 рублей — скидка 10%.
        Более 50 000 рублей — скидка 15%.
    Процедура должна принимать сумму покупки и возвращать сумму скидки и итоговую сумму к оплате.

Ожидаемый результат:

    Код процедуры с логикой расчета.
    Тестовые примеры с различными суммами покупок.

Задача 10: Поиск наибольшего общего делителя (НОД) двух чисел

Описание:

Написать функцию для вычисления НОД двух натуральных чисел с использованием алгоритма Евклида.

Требования:

    Функция принимает два натуральных числа.
    Обрабатывать случаи, когда входные данные некорректны (не натуральные числа).

Ожидаемый результат:

    Реализованный алгоритм функции.
    Тестирование функции с различными парами чисел.

Как использовать эти задачи в бенчмарке:

    Оценка помощи AI-инструмента в решении задачи:
        Предложите инструменту сгенерировать код на основе описания задачи.
        Проверьте, насколько точно и эффективно инструмент справляется с задачей.

    Метрики для оценки:
        Время генерации решения: Сколько времени потребовалось инструменту для предоставления рабочего кода.
        Качество кода: Соответствие полученного кода требованиям задачи, наличие ошибок или недочетов.
        Необходимость доработок: Объем правок, которые нужно внести разработчику после использования инструмента.

    Порядок тестирования:
        Предоставьте описание задачи AI-инструменту.
        Получите сгенерированный код.
        Проведите тестирование кода в среде 1С.
        Оцените результаты по выбранным метрикам.

Заключение:

Предложенные задачи помогут вам быстро запустить первую версию бенчмарка, так как они:

    Просты для понимания и реализации.
    Отражают типичные задачи разработчиков 1С.
    Позволяют объективно оценить эффективность AI-инструмента в помощи при программировании на языке 1С.

Используя эти задачи, вы сможете собрать первые данные и сделать предварительные выводы о полезности и эффективности рассматриваемых AI-инструментов для разработчиков 1С.